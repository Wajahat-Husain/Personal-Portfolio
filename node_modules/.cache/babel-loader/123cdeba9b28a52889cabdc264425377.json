{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InteractionManager = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Enums_1 = require(\"../Enums\");\n\nconst Bouncer_1 = require(\"../Interactions/External/Bouncer\");\n\nconst Bubbler_1 = require(\"../Interactions/External/Bubbler\");\n\nconst Connector_1 = require(\"../Interactions/External/Connector\");\n\nconst Grabber_1 = require(\"../Interactions/External/Grabber\");\n\nconst Lighter_1 = require(\"../Interactions/External/Lighter\");\n\nconst Attractor_1 = require(\"../Interactions/External/Attractor\");\n\nconst Repulser_1 = require(\"../Interactions/External/Repulser\");\n\nconst TrailMaker_1 = require(\"../Interactions/External/TrailMaker\");\n\nconst Attractor_2 = require(\"../Interactions/Particles/Attractor\");\n\nconst Lighter_2 = require(\"../Interactions/Particles/Lighter\");\n\nconst Collider_1 = require(\"../Interactions/Particles/Collider\");\n\nconst Linker_1 = require(\"../Interactions/Particles/Linker\");\n\nclass InteractionManager {\n  constructor(container) {\n    this.container = container;\n    const interactors = Utils_1.Plugins.getInteractors(container);\n    this.externalInteractors = [new Bouncer_1.Bouncer(container), new Bubbler_1.Bubbler(container), new Connector_1.Connector(container), new Grabber_1.Grabber(container), new Lighter_1.Lighter(container), new Attractor_1.Attractor(container), new Repulser_1.Repulser(container), new TrailMaker_1.TrailMaker(container)];\n    this.particleInteractors = [new Attractor_2.Attractor(container), new Lighter_2.Lighter(container), new Collider_1.Collider(container), new Linker_1.Linker(container)];\n\n    for (const interactor of interactors) {\n      switch (interactor.type) {\n        case Enums_1.InteractorType.External:\n          this.externalInteractors.push(interactor);\n          break;\n\n        case Enums_1.InteractorType.Particles:\n          this.particleInteractors.push(interactor);\n          break;\n      }\n    }\n  }\n\n  externalInteract(delta) {\n    for (const interactor of this.externalInteractors) {\n      if (interactor.isEnabled()) {\n        interactor.interact(delta);\n      }\n    }\n  }\n\n  particlesInteract(particle, delta) {\n    for (const interactor of this.externalInteractors) {\n      interactor.reset(particle);\n    }\n\n    for (const interactor of this.particleInteractors) {\n      if (interactor.isEnabled(particle)) {\n        interactor.interact(particle, delta);\n      }\n    }\n  }\n\n}\n\nexports.InteractionManager = InteractionManager;","map":{"version":3,"sources":["D:/React_Templates/React-Portfolio-starter-code-files/node_modules/tsparticles/Core/InteractionManager.js"],"names":["Object","defineProperty","exports","value","InteractionManager","Utils_1","require","Enums_1","Bouncer_1","Bubbler_1","Connector_1","Grabber_1","Lighter_1","Attractor_1","Repulser_1","TrailMaker_1","Attractor_2","Lighter_2","Collider_1","Linker_1","constructor","container","interactors","Plugins","getInteractors","externalInteractors","Bouncer","Bubbler","Connector","Grabber","Lighter","Attractor","Repulser","TrailMaker","particleInteractors","Collider","Linker","interactor","type","InteractorType","External","push","Particles","externalInteract","delta","isEnabled","interact","particlesInteract","particle","reset"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kCAAD,CAAzB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,kCAAD,CAAzB;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,oCAAD,CAA3B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,kCAAD,CAAzB;;AACA,MAAMM,SAAS,GAAGN,OAAO,CAAC,kCAAD,CAAzB;;AACA,MAAMO,WAAW,GAAGP,OAAO,CAAC,oCAAD,CAA3B;;AACA,MAAMQ,UAAU,GAAGR,OAAO,CAAC,mCAAD,CAA1B;;AACA,MAAMS,YAAY,GAAGT,OAAO,CAAC,qCAAD,CAA5B;;AACA,MAAMU,WAAW,GAAGV,OAAO,CAAC,qCAAD,CAA3B;;AACA,MAAMW,SAAS,GAAGX,OAAO,CAAC,mCAAD,CAAzB;;AACA,MAAMY,UAAU,GAAGZ,OAAO,CAAC,oCAAD,CAA1B;;AACA,MAAMa,QAAQ,GAAGb,OAAO,CAAC,kCAAD,CAAxB;;AACA,MAAMF,kBAAN,CAAyB;AACrBgB,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACA,UAAMC,WAAW,GAAGjB,OAAO,CAACkB,OAAR,CAAgBC,cAAhB,CAA+BH,SAA/B,CAApB;AACA,SAAKI,mBAAL,GAA2B,CACvB,IAAIjB,SAAS,CAACkB,OAAd,CAAsBL,SAAtB,CADuB,EAEvB,IAAIZ,SAAS,CAACkB,OAAd,CAAsBN,SAAtB,CAFuB,EAGvB,IAAIX,WAAW,CAACkB,SAAhB,CAA0BP,SAA1B,CAHuB,EAIvB,IAAIV,SAAS,CAACkB,OAAd,CAAsBR,SAAtB,CAJuB,EAKvB,IAAIT,SAAS,CAACkB,OAAd,CAAsBT,SAAtB,CALuB,EAMvB,IAAIR,WAAW,CAACkB,SAAhB,CAA0BV,SAA1B,CANuB,EAOvB,IAAIP,UAAU,CAACkB,QAAf,CAAwBX,SAAxB,CAPuB,EAQvB,IAAIN,YAAY,CAACkB,UAAjB,CAA4BZ,SAA5B,CARuB,CAA3B;AAUA,SAAKa,mBAAL,GAA2B,CACvB,IAAIlB,WAAW,CAACe,SAAhB,CAA0BV,SAA1B,CADuB,EAEvB,IAAIJ,SAAS,CAACa,OAAd,CAAsBT,SAAtB,CAFuB,EAGvB,IAAIH,UAAU,CAACiB,QAAf,CAAwBd,SAAxB,CAHuB,EAIvB,IAAIF,QAAQ,CAACiB,MAAb,CAAoBf,SAApB,CAJuB,CAA3B;;AAMA,SAAK,MAAMgB,UAAX,IAAyBf,WAAzB,EAAsC;AAClC,cAAQe,UAAU,CAACC,IAAnB;AACI,aAAK/B,OAAO,CAACgC,cAAR,CAAuBC,QAA5B;AACI,eAAKf,mBAAL,CAAyBgB,IAAzB,CAA8BJ,UAA9B;AACA;;AACJ,aAAK9B,OAAO,CAACgC,cAAR,CAAuBG,SAA5B;AACI,eAAKR,mBAAL,CAAyBO,IAAzB,CAA8BJ,UAA9B;AACA;AANR;AAQH;AACJ;;AACDM,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,SAAK,MAAMP,UAAX,IAAyB,KAAKZ,mBAA9B,EAAmD;AAC/C,UAAIY,UAAU,CAACQ,SAAX,EAAJ,EAA4B;AACxBR,QAAAA,UAAU,CAACS,QAAX,CAAoBF,KAApB;AACH;AACJ;AACJ;;AACDG,EAAAA,iBAAiB,CAACC,QAAD,EAAWJ,KAAX,EAAkB;AAC/B,SAAK,MAAMP,UAAX,IAAyB,KAAKZ,mBAA9B,EAAmD;AAC/CY,MAAAA,UAAU,CAACY,KAAX,CAAiBD,QAAjB;AACH;;AACD,SAAK,MAAMX,UAAX,IAAyB,KAAKH,mBAA9B,EAAmD;AAC/C,UAAIG,UAAU,CAACQ,SAAX,CAAqBG,QAArB,CAAJ,EAAoC;AAChCX,QAAAA,UAAU,CAACS,QAAX,CAAoBE,QAApB,EAA8BJ,KAA9B;AACH;AACJ;AACJ;;AA/CoB;;AAiDzB1C,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InteractionManager = void 0;\nconst Utils_1 = require(\"../Utils\");\nconst Enums_1 = require(\"../Enums\");\nconst Bouncer_1 = require(\"../Interactions/External/Bouncer\");\nconst Bubbler_1 = require(\"../Interactions/External/Bubbler\");\nconst Connector_1 = require(\"../Interactions/External/Connector\");\nconst Grabber_1 = require(\"../Interactions/External/Grabber\");\nconst Lighter_1 = require(\"../Interactions/External/Lighter\");\nconst Attractor_1 = require(\"../Interactions/External/Attractor\");\nconst Repulser_1 = require(\"../Interactions/External/Repulser\");\nconst TrailMaker_1 = require(\"../Interactions/External/TrailMaker\");\nconst Attractor_2 = require(\"../Interactions/Particles/Attractor\");\nconst Lighter_2 = require(\"../Interactions/Particles/Lighter\");\nconst Collider_1 = require(\"../Interactions/Particles/Collider\");\nconst Linker_1 = require(\"../Interactions/Particles/Linker\");\nclass InteractionManager {\n    constructor(container) {\n        this.container = container;\n        const interactors = Utils_1.Plugins.getInteractors(container);\n        this.externalInteractors = [\n            new Bouncer_1.Bouncer(container),\n            new Bubbler_1.Bubbler(container),\n            new Connector_1.Connector(container),\n            new Grabber_1.Grabber(container),\n            new Lighter_1.Lighter(container),\n            new Attractor_1.Attractor(container),\n            new Repulser_1.Repulser(container),\n            new TrailMaker_1.TrailMaker(container),\n        ];\n        this.particleInteractors = [\n            new Attractor_2.Attractor(container),\n            new Lighter_2.Lighter(container),\n            new Collider_1.Collider(container),\n            new Linker_1.Linker(container),\n        ];\n        for (const interactor of interactors) {\n            switch (interactor.type) {\n                case Enums_1.InteractorType.External:\n                    this.externalInteractors.push(interactor);\n                    break;\n                case Enums_1.InteractorType.Particles:\n                    this.particleInteractors.push(interactor);\n                    break;\n            }\n        }\n    }\n    externalInteract(delta) {\n        for (const interactor of this.externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this.externalInteractors) {\n            interactor.reset(particle);\n        }\n        for (const interactor of this.particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n}\nexports.InteractionManager = InteractionManager;\n"]},"metadata":{},"sourceType":"script"}