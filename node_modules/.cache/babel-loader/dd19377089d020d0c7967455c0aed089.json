{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadAbsorbersPlugin = void 0;\n\nconst Absorbers_1 = require(\"./Absorbers\");\n\nconst Enums_1 = require(\"./Enums\");\n\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nclass Plugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n\n  getPlugin(container) {\n    return new Absorbers_1.Absorbers(container);\n  }\n\n  needsPlugin(options) {\n    var _a, _b, _c;\n\n    if (options === undefined) {\n      return false;\n    }\n\n    const absorbers = options.absorbers;\n    return absorbers instanceof Array && !!absorbers.length || absorbers !== undefined || !!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) && Utils_1.isInArray(Enums_1.AbsorberClickMode.absorber, options.interactivity.events.onClick.mode);\n  }\n\n  loadOptions(options, source) {\n    var _a, _b;\n\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n\n    if (source === null || source === void 0 ? void 0 : source.absorbers) {\n      if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n        optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.absorbers = absorberOptions = new Absorber_1.Absorber();\n        }\n\n        absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n      }\n    }\n\n    const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n\n    if (interactivityAbsorbers) {\n      if (interactivityAbsorbers instanceof Array) {\n        optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map(s => {\n          const tmp = new Absorber_1.Absorber();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        let absorberOptions = optionsCast.interactivity.modes.absorbers;\n\n        if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n          optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber_1.Absorber();\n        }\n\n        absorberOptions.load(interactivityAbsorbers);\n      }\n    }\n  }\n\n}\n\nfunction loadAbsorbersPlugin(tsParticles) {\n  const plugin = new Plugin();\n  tsParticles.addPlugin(plugin);\n}\n\nexports.loadAbsorbersPlugin = loadAbsorbersPlugin;","map":{"version":3,"sources":["D:/GITHUB REPOS/Portfolio/node_modules/tsparticles/Plugins/Absorbers/plugin.js"],"names":["Object","defineProperty","exports","value","loadAbsorbersPlugin","Absorbers_1","require","Enums_1","Absorber_1","Utils_1","Plugin","constructor","id","getPlugin","container","Absorbers","needsPlugin","options","_a","_b","_c","undefined","absorbers","Array","length","interactivity","events","onClick","mode","isInArray","AbsorberClickMode","absorber","loadOptions","source","optionsCast","map","s","tmp","Absorber","load","absorberOptions","interactivityAbsorbers","modes","tsParticles","plugin","addPlugin"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadAbsorbersPlugin = void 0;\nconst Absorbers_1 = require(\"./Absorbers\");\nconst Enums_1 = require(\"./Enums\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Utils_1 = require(\"../../Utils\");\nclass Plugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers_1.Absorbers(container);\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (options === undefined) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        return ((absorbers instanceof Array && !!absorbers.length) ||\n            absorbers !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                Utils_1.isInArray(Enums_1.AbsorberClickMode.absorber, options.interactivity.events.onClick.mode)));\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            if ((source === null || source === void 0 ? void 0 : source.absorbers) instanceof Array) {\n                optionsCast.absorbers = source === null || source === void 0 ? void 0 : source.absorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(source === null || source === void 0 ? void 0 : source.absorbers);\n            }\n        }\n        const interactivityAbsorbers = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers;\n        if (interactivityAbsorbers) {\n            if (interactivityAbsorbers instanceof Array) {\n                optionsCast.interactivity.modes.absorbers = interactivityAbsorbers.map((s) => {\n                    const tmp = new Absorber_1.Absorber();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                let absorberOptions = optionsCast.interactivity.modes.absorbers;\n                if ((absorberOptions === null || absorberOptions === void 0 ? void 0 : absorberOptions.load) === undefined) {\n                    optionsCast.interactivity.modes.absorbers = absorberOptions = new Absorber_1.Absorber();\n                }\n                absorberOptions.load(interactivityAbsorbers);\n            }\n        }\n    }\n}\nfunction loadAbsorbersPlugin(tsParticles) {\n    const plugin = new Plugin();\n    tsParticles.addPlugin(plugin);\n}\nexports.loadAbsorbersPlugin = loadAbsorbersPlugin;\n"]},"metadata":{},"sourceType":"script"}