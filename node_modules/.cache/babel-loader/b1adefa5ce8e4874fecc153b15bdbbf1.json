{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadInfectionPlugin = void 0;\n\nconst InfectionInstance_1 = require(\"./InfectionInstance\");\n\nconst ParticlesInfecter_1 = require(\"./ParticlesInfecter\");\n\nconst Infection_1 = require(\"./Options/Classes/Infection\");\n\nclass Plugin {\n  constructor() {\n    this.id = \"infection\";\n  }\n\n  getPlugin(container) {\n    return new InfectionInstance_1.InfectionInstance(container);\n  }\n\n  needsPlugin(options) {\n    var _a, _b;\n\n    return (_b = (_a = options === null || options === void 0 ? void 0 : options.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n  }\n\n  loadOptions(options, source) {\n    if (!this.needsPlugin(source)) {\n      return;\n    }\n\n    const optionsCast = options;\n    let infectionOptions = optionsCast.infection;\n\n    if ((infectionOptions === null || infectionOptions === void 0 ? void 0 : infectionOptions.load) === undefined) {\n      optionsCast.infection = infectionOptions = new Infection_1.Infection();\n    }\n\n    infectionOptions.load(source === null || source === void 0 ? void 0 : source.infection);\n  }\n\n}\n\nfunction loadInfectionPlugin(tsParticles) {\n  const plugin = new Plugin();\n  tsParticles.addPlugin(plugin);\n  tsParticles.addInteractor(\"particlesInfection\", container => new ParticlesInfecter_1.ParticlesInfecter(container));\n}\n\nexports.loadInfectionPlugin = loadInfectionPlugin;","map":{"version":3,"sources":["D:/GITHUB REPOS/Portfolio/node_modules/tsparticles/Plugins/Infection/plugin.js"],"names":["Object","defineProperty","exports","value","loadInfectionPlugin","InfectionInstance_1","require","ParticlesInfecter_1","Infection_1","Plugin","constructor","id","getPlugin","container","InfectionInstance","needsPlugin","options","_a","_b","infection","enable","loadOptions","source","optionsCast","infectionOptions","load","undefined","Infection","tsParticles","plugin","addPlugin","addInteractor","ParticlesInfecter"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,qBAAD,CAAnC;;AACA,MAAMC,mBAAmB,GAAGD,OAAO,CAAC,qBAAD,CAAnC;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,6BAAD,CAA3B;;AACA,MAAMG,MAAN,CAAa;AACTC,EAAAA,WAAW,GAAG;AACV,SAAKC,EAAL,GAAU,WAAV;AACH;;AACDC,EAAAA,SAAS,CAACC,SAAD,EAAY;AACjB,WAAO,IAAIR,mBAAmB,CAACS,iBAAxB,CAA0CD,SAA1C,CAAP;AACH;;AACDE,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,QAAIC,EAAJ,EAAQC,EAAR;;AACA,WAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACG,SAAhE,MAA+E,IAA/E,IAAuFF,EAAE,KAAK,KAAK,CAAnG,GAAuG,KAAK,CAA5G,GAAgHA,EAAE,CAACG,MAAzH,MAAqI,IAArI,IAA6IF,EAAE,KAAK,KAAK,CAAzJ,GAA6JA,EAA7J,GAAkK,KAAzK;AACH;;AACDG,EAAAA,WAAW,CAACL,OAAD,EAAUM,MAAV,EAAkB;AACzB,QAAI,CAAC,KAAKP,WAAL,CAAiBO,MAAjB,CAAL,EAA+B;AAC3B;AACH;;AACD,UAAMC,WAAW,GAAGP,OAApB;AACA,QAAIQ,gBAAgB,GAAGD,WAAW,CAACJ,SAAnC;;AACA,QAAI,CAACK,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACC,IAAtF,MAAgGC,SAApG,EAA+G;AAC3GH,MAAAA,WAAW,CAACJ,SAAZ,GAAwBK,gBAAgB,GAAG,IAAIhB,WAAW,CAACmB,SAAhB,EAA3C;AACH;;AACDH,IAAAA,gBAAgB,CAACC,IAAjB,CAAsBH,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACH,SAA7E;AACH;;AArBQ;;AAuBb,SAASf,mBAAT,CAA6BwB,WAA7B,EAA0C;AACtC,QAAMC,MAAM,GAAG,IAAIpB,MAAJ,EAAf;AACAmB,EAAAA,WAAW,CAACE,SAAZ,CAAsBD,MAAtB;AACAD,EAAAA,WAAW,CAACG,aAAZ,CAA0B,oBAA1B,EAAiDlB,SAAD,IAAe,IAAIN,mBAAmB,CAACyB,iBAAxB,CAA0CnB,SAA1C,CAA/D;AACH;;AACDX,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadInfectionPlugin = void 0;\nconst InfectionInstance_1 = require(\"./InfectionInstance\");\nconst ParticlesInfecter_1 = require(\"./ParticlesInfecter\");\nconst Infection_1 = require(\"./Options/Classes/Infection\");\nclass Plugin {\n    constructor() {\n        this.id = \"infection\";\n    }\n    getPlugin(container) {\n        return new InfectionInstance_1.InfectionInstance(container);\n    }\n    needsPlugin(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.infection) === null || _a === void 0 ? void 0 : _a.enable) !== null && _b !== void 0 ? _b : false;\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(source)) {\n            return;\n        }\n        const optionsCast = options;\n        let infectionOptions = optionsCast.infection;\n        if ((infectionOptions === null || infectionOptions === void 0 ? void 0 : infectionOptions.load) === undefined) {\n            optionsCast.infection = infectionOptions = new Infection_1.Infection();\n        }\n        infectionOptions.load(source === null || source === void 0 ? void 0 : source.infection);\n    }\n}\nfunction loadInfectionPlugin(tsParticles) {\n    const plugin = new Plugin();\n    tsParticles.addPlugin(plugin);\n    tsParticles.addInteractor(\"particlesInfection\", (container) => new ParticlesInfecter_1.ParticlesInfecter(container));\n}\nexports.loadInfectionPlugin = loadInfectionPlugin;\n"]},"metadata":{},"sourceType":"script"}