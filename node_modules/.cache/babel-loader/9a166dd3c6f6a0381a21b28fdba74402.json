{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Infecter = void 0;\n\nclass Infecter {\n  constructor(container) {\n    this.container = container;\n  }\n\n  startInfection(particle, stage) {\n    const options = this.container.actualOptions,\n          stages = options.infection.stages,\n          stagesCount = stages.length;\n\n    if (stage > stagesCount || stage < 0) {\n      return;\n    }\n\n    particle.infection.delay = 0;\n    particle.infection.delayStage = stage;\n  }\n\n  updateInfectionStage(particle, stage) {\n    const options = this.container.actualOptions,\n          stagesCount = options.infection.stages.length;\n\n    if (stage > stagesCount || stage < 0 || particle.infection.stage !== undefined && particle.infection.stage > stage) {\n      return;\n    }\n\n    particle.infection.stage = stage;\n    particle.infection.time = 0;\n  }\n\n  updateInfection(particle, delta) {\n    const options = this.container.actualOptions,\n          infection = options.infection,\n          stages = options.infection.stages,\n          stagesCount = stages.length;\n\n    if (particle.infection.delay !== undefined && particle.infection.delayStage !== undefined) {\n      const stage = particle.infection.delayStage;\n\n      if (stage > stagesCount || stage < 0) {\n        return;\n      }\n\n      if (particle.infection.delay >= infection.delay * 1000) {\n        particle.infection.stage = stage;\n        particle.infection.time = 0;\n        delete particle.infection.delay;\n        delete particle.infection.delayStage;\n      } else {\n        particle.infection.delay += delta;\n      }\n    } else {\n      delete particle.infection.delay;\n      delete particle.infection.delayStage;\n    }\n\n    if (particle.infection.stage !== undefined && particle.infection.time !== undefined) {\n      const infectionStage = stages[particle.infection.stage];\n\n      if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n        if (particle.infection.time > infectionStage.duration * 1000) {\n          this.nextInfectionStage(particle);\n        } else {\n          particle.infection.time += delta;\n        }\n      } else {\n        particle.infection.time += delta;\n      }\n    } else {\n      delete particle.infection.stage;\n      delete particle.infection.time;\n    }\n  }\n\n  nextInfectionStage(particle) {\n    const options = this.container.actualOptions,\n          stagesCount = options.infection.stages.length;\n\n    if (stagesCount <= 0 || particle.infection.stage === undefined) {\n      return;\n    }\n\n    particle.infection.time = 0;\n\n    if (stagesCount <= ++particle.infection.stage) {\n      if (options.infection.cure) {\n        delete particle.infection.stage;\n        delete particle.infection.time;\n        return;\n      } else {\n        particle.infection.stage = 0;\n        particle.infection.time = 0;\n      }\n    }\n  }\n\n}\n\nexports.Infecter = Infecter;","map":{"version":3,"sources":["D:/GITHUB REPOS/Portfolio/node_modules/tsparticles/Plugins/Infection/Infecter.js"],"names":["Object","defineProperty","exports","value","Infecter","constructor","container","startInfection","particle","stage","options","actualOptions","stages","infection","stagesCount","length","delay","delayStage","updateInfectionStage","undefined","time","updateInfection","delta","infectionStage","duration","nextInfectionStage","cure"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Infecter = void 0;\nclass Infecter {\n    constructor(container) {\n        this.container = container;\n    }\n    startInfection(particle, stage) {\n        const options = this.container.actualOptions, stages = options.infection.stages, stagesCount = stages.length;\n        if (stage > stagesCount || stage < 0) {\n            return;\n        }\n        particle.infection.delay = 0;\n        particle.infection.delayStage = stage;\n    }\n    updateInfectionStage(particle, stage) {\n        const options = this.container.actualOptions, stagesCount = options.infection.stages.length;\n        if (stage > stagesCount ||\n            stage < 0 ||\n            (particle.infection.stage !== undefined && particle.infection.stage > stage)) {\n            return;\n        }\n        particle.infection.stage = stage;\n        particle.infection.time = 0;\n    }\n    updateInfection(particle, delta) {\n        const options = this.container.actualOptions, infection = options.infection, stages = options.infection.stages, stagesCount = stages.length;\n        if (particle.infection.delay !== undefined && particle.infection.delayStage !== undefined) {\n            const stage = particle.infection.delayStage;\n            if (stage > stagesCount || stage < 0) {\n                return;\n            }\n            if (particle.infection.delay >= infection.delay * 1000) {\n                particle.infection.stage = stage;\n                particle.infection.time = 0;\n                delete particle.infection.delay;\n                delete particle.infection.delayStage;\n            }\n            else {\n                particle.infection.delay += delta;\n            }\n        }\n        else {\n            delete particle.infection.delay;\n            delete particle.infection.delayStage;\n        }\n        if (particle.infection.stage !== undefined && particle.infection.time !== undefined) {\n            const infectionStage = stages[particle.infection.stage];\n            if (infectionStage.duration !== undefined && infectionStage.duration >= 0) {\n                if (particle.infection.time > infectionStage.duration * 1000) {\n                    this.nextInfectionStage(particle);\n                }\n                else {\n                    particle.infection.time += delta;\n                }\n            }\n            else {\n                particle.infection.time += delta;\n            }\n        }\n        else {\n            delete particle.infection.stage;\n            delete particle.infection.time;\n        }\n    }\n    nextInfectionStage(particle) {\n        const options = this.container.actualOptions, stagesCount = options.infection.stages.length;\n        if (stagesCount <= 0 || particle.infection.stage === undefined) {\n            return;\n        }\n        particle.infection.time = 0;\n        if (stagesCount <= ++particle.infection.stage) {\n            if (options.infection.cure) {\n                delete particle.infection.stage;\n                delete particle.infection.time;\n                return;\n            }\n            else {\n                particle.infection.stage = 0;\n                particle.infection.time = 0;\n            }\n        }\n    }\n}\nexports.Infecter = Infecter;\n"]},"metadata":{},"sourceType":"script"}